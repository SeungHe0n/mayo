{"version":3,"sources":["reportWebVitals.js","defaultMemo.js","components/Popup.js","components/button/SearchButton.js","components/Header.js","components/button/InputButton.js","components/bar/InputBar.js","components/bar/SearchBar.js","components/bar/Bar.js","components/button/EditButton.js","components/button/DeleteButton.js","components/button/ConfirmButton.js","components/Memo.js","components/list/MemoList.js","components/list/SearchList.js","components/list/List.js","components/Footer.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","defaultMemo","id","text","checked","Popup","onClose","Wrap","onAnimationEnd","styled","div","SearchButton","search","onSearch","onClick","css","Header","Button","type","button","InputBar","onInsert","onPopup","onExpand","useState","value","setValue","memoTextarea","useRef","onChange","useCallback","e","target","current","style","height","scrollHeight","trimValue","trim","preventDefault","focus","onKeyDown","key","shiftKey","ctrlKey","Form","placeholder","autoFocus","ref","spellCheck","form","SearchBar","onKeyword","Bar","EditButton","DeleteButton","ConfirmButton","Memo","memo","onRemove","onToggle","onEdit","editFlag","setEditFlag","readOnly","MemoList","memos","slice","reverse","map","SearchList","keyword","filter","x","indexOf","List","Footer","footer","App","setMemos","nextId","concat","popup","setPopup","padding","setPadding","setSearch","setKeyword","Body","Top","Main","header","main","props","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gKAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,4BCWCQ,EAlBK,CAClB,CACEC,GAAI,EACJC,KAAM,mJACNC,SAAS,GAEX,CACEF,GAAI,EACJC,KAAM,6IACNC,SAAS,GAEX,CACEF,GAAI,EACJC,KAAM,sIACNC,SAAS,I,OCPE,SAASC,EAAT,GAA6B,IAAZC,EAAW,EAAXA,QAC9B,OACE,cAACC,EAAD,CAAMC,eAAgBF,EAAtB,SACE,8BACE,2EAMR,I,MAAMC,EAAOE,IAAOC,IAAV,qqB,QCRK,SAASC,EAAT,GAA6C,IAArBC,EAAoB,EAApBA,OAAQC,EAAY,EAAZA,SAC7C,OACE,cAAC,EAAD,CAAMD,OAAQA,EAAQE,QAASD,EAA/B,SACE,cAAC,IAAD,MAKN,I,EAAMN,EAAOE,IAAOC,IAAV,wQAaN,YACA,OADgB,EAAbE,OAEMG,YAAP,2DAIOA,YAAP,mIC3BS,SAASC,EAAT,GAAuC,IAArBJ,EAAoB,EAApBA,OAAQC,EAAY,EAAZA,SACvC,OACE,eAAC,EAAD,CAAMD,OAAQA,EAAd,UACE,sCACA,cAACD,EAAD,CAAcC,OAAQA,EAAQC,SAAUA,OAK9C,I,EAAMN,EAAOE,IAAOC,IAAV,6PAUG,qBAAGE,OAAuB,UAAY,a,QCnBpC,SAASD,EAAT,GAAoC,IAAZG,EAAW,EAAXA,QACrC,OACE,cAACG,EAAD,CAAQC,KAAK,SAASJ,QAASA,EAA/B,SACE,cAAC,IAAD,MAKN,I,EAAMG,EAASR,IAAOU,OAAV,wPCNG,SAASC,EAAT,GAAoD,IAAhCC,EAA+B,EAA/BA,SAAUC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,SAAY,EACtCC,mBAAS,IAD6B,mBACzDC,EADyD,KAClDC,EADkD,KAE1DC,EAAeC,iBAAO,MAEtBC,EAAWC,uBACf,SAACC,GACCL,EAASK,EAAEC,OAAOP,OAElBE,EAAaM,QAAQC,MAAMC,OAAS,GACpCR,EAAaM,QAAQC,MAAMC,OACzBR,EAAaM,QAAQG,aAAe,KAElCT,EAAaM,QAAQG,aAAe,IACtCb,EAAS,IAAMI,EAAaM,QAAQG,cACjCb,EAAS,OAEhB,CAACA,IAGGT,EAAUgB,uBACd,SAACC,GACC,IAAMM,EAAYZ,EAAMa,OAEN,KAAdD,EACFf,IAEAD,EAASgB,GAGXX,EAAS,IACTC,EAAaM,QAAQC,MAAMC,OAAS,YACpCZ,EAAS,KAETQ,EAAEQ,iBACFZ,EAAaM,QAAQO,UAEvB,CAACnB,EAAUI,EAAOH,EAASC,IAGvBkB,EAAYX,uBAChB,SAACC,GACe,UAAVA,EAAEW,MACCX,EAAEY,UAAaZ,EAAEa,SACpB9B,EAAQiB,MAId,CAACjB,IAGH,OACE,eAAC+B,EAAD,WACE,0BACEC,YAAY,sBACZrB,MAAOA,EACPI,SAAUA,EACVY,UAAWA,EACXM,WAAS,EACTC,IAAKrB,EACLsB,WAAW,UAEb,cAAC,EAAD,CAAanC,QAASA,OAK5B,I,EAAM+B,EAAOpC,IAAOyC,KAAV,8fCrEK,SAASC,EAAT,GAAmC,IAAdC,EAAa,EAAbA,UAAa,EACrB5B,mBAAS,IADY,mBACxCC,EADwC,KACjCC,EADiC,KAGzCG,EAAWC,uBACf,SAACC,GACCL,EAASK,EAAEC,OAAOP,OAClB2B,EAAUrB,EAAEC,OAAOP,SAErB,CAAC2B,IAGH,OACE,cAAC,EAAD,UACE,0BACEN,YAAY,kBACZC,WAAS,EACTE,WAAW,QACXxB,MAAOA,EACPI,SAAUA,MAMlB,IAAMgB,EAAOpC,IAAOyC,KAAV,meCpBK,SAASG,EAAT,GAMX,IALFzC,EAKC,EALDA,OACAS,EAIC,EAJDA,SACAC,EAGC,EAHDA,QACAC,EAEC,EAFDA,SACA6B,EACC,EADDA,UAEA,OACE,mCACGxC,EACC,cAACuC,EAAD,CAAWC,UAAWA,IAEtB,cAAChC,EAAD,CAAUC,SAAUA,EAAUC,QAASA,EAASC,SAAUA,M,iBCfnD,SAAS+B,EAAT,GAA2C,IAArBlD,EAAoB,EAApBA,QAASU,EAAW,EAAXA,QAC5C,OACE,cAAC,EAAD,CAAMV,QAASA,EAASU,QAASA,EAAjC,SACE,cAAC,IAAD,MAKN,I,MAAMP,EAAOE,IAAOC,IAAV,2IAON,YACA,OADiB,EAAdN,QAEMW,YAAP,2DAIOA,YAAP,sHCrBS,SAASwC,EAAT,GAA6C,IAArBnD,EAAoB,EAApBA,QAASU,EAAW,EAAXA,QAC9C,OACE,cAAC,EAAD,CAAMV,QAASA,EAASU,QAASA,EAAjC,SACE,cAAC,IAAD,MAKN,I,MAAMP,EAAOE,IAAOC,IAAV,2IAON,YACA,OADiB,EAAdN,QAEMW,YAAP,2DAIOA,YAAP,sHCrBS,SAASyC,EAAT,GAA8C,IAArBpD,EAAoB,EAApBA,QAASU,EAAW,EAAXA,QAC/C,OACE,cAAC,GAAD,CAAMV,QAASA,EAASU,QAASA,EAAjC,SACE,cAAC,IAAD,MAKN,I,IAAMP,GAAOE,IAAOC,IAAV,2IAON,YACA,OADiB,EAAdN,QAEMW,YAAP,2DAIOA,YAAP,sHCZS,SAAS0C,GAAT,GAA8D,IAA9CC,EAA6C,EAA7CA,KAAMC,EAAuC,EAAvCA,SAAUC,EAA6B,EAA7BA,SAAUC,EAAmB,EAAnBA,OAAQvC,EAAW,EAAXA,QACvDpB,EAAsBwD,EAAtBxD,GAAIC,EAAkBuD,EAAlBvD,KAAMC,EAAYsD,EAAZtD,QADwD,EAEhDoB,mBAASrB,GAFuC,mBAEnEsB,EAFmE,KAE5DC,EAF4D,OAG1CF,oBAAS,GAHiC,mBAGnEsC,EAHmE,KAGzDC,EAHyD,KAIpEpC,EAAeC,iBAAO,MAEtBd,EAAUgB,uBACd,SAACC,GACC,GAAI+B,EAAU,CACZ,IAAMzB,EAAYZ,EAAMa,OAEN,KAAdD,GACFf,IACAI,EAASvB,KAET0D,EAAO3D,EAAImC,GACXX,EAASW,IAGb0B,GAAaD,KAEf,CAACA,EAAU5D,EAAIuB,EAAOoC,EAAQ1D,EAAMmB,IAGhCO,EAAWC,uBAAY,SAACC,GAC5BL,EAASK,EAAEC,OAAOP,SACjB,IAEGgB,EAAYX,uBAChB,SAACC,GACe,UAAVA,EAAEW,MACCX,EAAEY,UAAaZ,EAAEa,SACpB9B,EAAQiB,MAId,CAACjB,IAGH,OAAIgD,EAEA,eAAC,GAAD,CAAM1D,QAASA,EAAf,UACE,0BACEqB,MAAOA,EACPI,SAAUA,EACVY,UAAWA,EACXO,IAAKrB,EACLoB,WAAS,EACTE,WAAW,UAEb,cAACO,EAAD,CAAepD,QAASA,EAASU,QAASA,IAC1C,cAACyC,EAAD,CAAcnD,QAASA,EAASU,QAAS,kBAAM6C,EAASzD,SAK1D,eAAC,GAAD,CAAME,QAASA,EAAf,UACE,qBAAKU,QAAS,kBAAM8C,EAAS1D,IAAK8D,UAAQ,EAA1C,SACG7D,IAEH,cAACmD,EAAD,CAAYlD,QAASA,EAASU,QAASA,IACvC,cAACyC,EAAD,CAAcnD,QAASA,EAASU,QAAS,kBAAM6C,EAASzD,SAMhE,I,GAAMK,GAAOE,IAAOC,IAAV,gjCA2DN,qBAAGN,SAEHW,YADO,kPChII,SAASkD,GAAT,GAMX,IALFC,EAKC,EALDA,MACAP,EAIC,EAJDA,SACAC,EAGC,EAHDA,SACAC,EAEC,EAFDA,OACAvC,EACC,EADDA,QAEA,OACE,mCACG4C,EACEC,MAAM,GACNC,UACAC,KAAI,SAACX,GAAD,OACH,cAACD,GAAD,CACEC,KAAMA,EAENC,SAAUA,EACVC,SAAUA,EACVC,OAAQA,EACRvC,QAASA,GAJJoC,EAAKxD,SCdP,SAASoE,GAAT,GAOX,IANFJ,EAMC,EANDA,MACAK,EAKC,EALDA,QACAZ,EAIC,EAJDA,SACAC,EAGC,EAHDA,SACAC,EAEC,EAFDA,OACAvC,EACC,EADDA,QAEA,OACE,mCACG4C,EACEC,MAAM,GACNK,QAAO,SAACC,GAAD,OAAOA,EAAEtE,KAAKuE,QAAQH,IAAY,GAAiB,KAAZA,KAC9CH,UACAC,KAAI,SAACX,GAAD,OACH,cAACD,GAAD,CACEC,KAAMA,EAENC,SAAUA,EACVC,SAAUA,EACVC,OAAQA,EACRvC,QAASA,GAJJoC,EAAKxD,SCdP,SAASyE,GAAT,GAQX,IAPF/D,EAOC,EAPDA,OACAsD,EAMC,EANDA,MACAK,EAKC,EALDA,QACAZ,EAIC,EAJDA,SACAC,EAGC,EAHDA,SACAC,EAEC,EAFDA,OACAvC,EACC,EADDA,QAEA,OACE,cAAC,GAAD,UACGV,EACC,cAAC0D,GAAD,CACEJ,MAAOA,EACPK,QAASA,EACTZ,SAAUA,EACVC,SAAUA,EACVC,OAAQA,EACRvC,QAASA,IAGX,cAAC2C,GAAD,CACEC,MAAOA,EACPP,SAAUA,EACVC,SAAUA,EACVC,OAAQA,EACRvC,QAASA,MAOnB,I,GAAMf,GAAOE,IAAOC,IAAV,kDCpDK,SAASkE,KACtB,OACE,cAAC,GAAD,UACE,+DAKN,I,YAAMrE,GAAOE,IAAOoE,OAAV,iUCDK,SAASC,KAAO,IAAD,EACFtD,mBAASvB,GADP,mBACrBiE,EADqB,KACda,EADc,KAEtBC,EAASpD,iBAAO,GAEhBP,EAAWS,uBACf,SAAC3B,GACC,IAAMuD,EAAO,CACXxD,GAAI8E,EAAO/C,QACX9B,OACAC,SAAS,GAEX2E,EAASb,EAAMe,OAAOvB,IACtBsB,EAAO/C,SAAW,IAEpB,CAACiC,IAGGP,EAAW7B,uBACf,SAAC5B,GACC6E,EAASb,EAAMM,QAAO,SAACd,GAAD,OAAUA,EAAKxD,KAAOA,QAE9C,CAACgE,IAGGN,EAAW9B,uBACf,SAAC5B,GACC6E,EACEb,EAAMG,KAAI,SAACX,GAAD,OACRA,EAAKxD,KAAOA,EAAZ,2BAAsBwD,GAAtB,IAA4BtD,SAAUsD,EAAKtD,UAAYsD,QAI7D,CAACQ,IAGGL,EAAS/B,uBACb,SAAC5B,EAAIC,GACH4E,EACEb,EAAMG,KAAI,SAACX,GAAD,OAAWA,EAAKxD,KAAOA,EAAZ,2BAAsBwD,GAAtB,IAA4BvD,KAAMA,IAASuD,QAGpE,CAACQ,IAzCyB,EA4CF1C,oBAAS,GA5CP,mBA4CrB0D,EA5CqB,KA4CdC,EA5Cc,KA6CtB7D,EAAU,WACd6D,GAAS,IA9CiB,EAiDE3D,mBAAS,KAjDX,mBAiDrB4D,EAjDqB,KAiDZC,EAjDY,OAuDA7D,oBAAS,GAvDT,mBAuDrBZ,EAvDqB,KAuDb0E,EAvDa,OA6DE9D,mBAAS,IA7DX,mBA6DrB+C,EA7DqB,KA6DZgB,EA7DY,KAkE5B,OACE,eAACC,GAAD,CAAM5E,OAAQA,EAAd,UACGsE,GAAS,cAAC7E,EAAD,CAAOC,QAAS,kBAAM6E,GAAS,MACzC,cAACM,GAAD,CAAK7E,OAAQA,EAAb,SACE,eAAC,GAAD,WACE,cAACI,EAAD,CAAQJ,OAAQA,EAAQC,SAff,WACHyE,GAAR1E,MAeE,cAACyC,EAAD,CACEzC,OAAQA,EACRS,SAAUA,EACVC,QAASA,EACTC,SA1BO,SAACE,GAChB4D,EAAW5D,IA0BH2B,UAfQ,SAAC3B,GACjB8D,EAAW9D,WAkBT,cAACiE,GAAD,CAAMN,QAASA,EAAf,SACE,cAACT,GAAD,CACE/D,OAAQA,EACRsD,MAAOA,EACPK,QAASA,EACTZ,SAAUA,EACVC,SAAUA,EACVC,OAAQA,EACRvC,QAASA,MAGb,cAACsD,GAAD,OAKN,IAAMY,GAAO/E,IAAOC,IAAV,0lBAQY,qBAAGE,OAAuB,UAAY,MAsBtD6E,GAAMhF,IAAOkF,OAAV,oNAKa,qBAAG/E,OAAuB,UAAY,WAQtDL,GAAOE,IAAOC,IAAV,gHAOJgF,GAAOjF,IAAOmF,KAAV,2GACO,SAACC,GAAD,OAAWA,EAAMT,QAAU,QCtJ5CU,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAClB,GAAD,MAEFmB,SAASC,eAAe,SAM1B1G,M","file":"static/js/main.8fcc88e8.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","const defaultMemo = [\r\n  {\r\n    id: 1,\r\n    text: '줄바꿈을 사용하고 싶다면\\nSHIFT를 누른 상태로 ENTER를 치세요',\r\n    checked: false,\r\n  },\r\n  {\r\n    id: 2,\r\n    text: '아이디어를 해결했다면 클릭해서 줄을 그을 수 있어요',\r\n    checked: true,\r\n  },\r\n  {\r\n    id: 3,\r\n    text: '위 입력창에 당신의 아이디어나 생각을 입력하세요',\r\n    checked: false,\r\n  },\r\n];\r\n\r\nexport default defaultMemo;\r\n","import styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nPopup.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default function Popup({ onClose }) {\r\n  return (\r\n    <Wrap onAnimationEnd={onClose}>\r\n      <div>\r\n        <p>빈 내용입니다.</p>\r\n      </div>\r\n    </Wrap>\r\n  );\r\n}\r\n\r\nconst Wrap = styled.div`\r\n  background-color: rgba(0, 0, 0, 0.2);\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0;\r\n  left: 0;\r\n  bottom: 0;\r\n  z-index: 999;\r\n  user-select: none;\r\n  animation: fadein 0.7s 2 alternate;\r\n  padding-top: 5rem;\r\n\r\n  div {\r\n    border-radius: 0.5rem;\r\n    background: #fff;\r\n    width: 260px;\r\n    height: 90px;\r\n    font-size: 1.1rem;\r\n    display: flex;\r\n    align-items: center;\r\n\r\n    margin: 0 auto;\r\n  }\r\n\r\n  div > p {\r\n    flex: auto;\r\n    margin: 0;\r\n    text-align: center;\r\n  }\r\n\r\n  @keyframes fadein {\r\n    0% {\r\n      opacity: 0;\r\n      margin-top: -30px;\r\n    }\r\n    50%,\r\n    100% {\r\n      opacity: 1;\r\n      margin-top: 0;\r\n    }\r\n  }\r\n`;\r\n","import styled, { css } from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport { ImSearch } from 'react-icons/im';\r\n\r\nSearchButton.propTypes = {\r\n  search: PropTypes.bool,\r\n  onSearch: PropTypes.func,\r\n};\r\n\r\nexport default function SearchButton({ search, onSearch }) {\r\n  return (\r\n    <Wrap search={search} onClick={onSearch}>\r\n      <ImSearch />\r\n    </Wrap>\r\n  );\r\n}\r\n\r\nconst Wrap = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-radius: 0.8rem;\r\n  width: 4.2rem;\r\n  height: 60%;\r\n  transition: all 0.2s ease-out;\r\n\r\n  cursor: pointer;\r\n  font-size: 1.5rem;\r\n  color: #42526c;\r\n\r\n  ${({ search }) => {\r\n    if (search) {\r\n      return css`\r\n        color: #717d91;\r\n      `;\r\n    } else {\r\n      return css`\r\n        :hover {\r\n          background-color: #f2f2f2;\r\n          color: #717d91;\r\n        }\r\n      `;\r\n    }\r\n  }}\r\n`;\r\n","import styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport SearchButton from './button/SearchButton';\r\n\r\nHeader.propTypes = {\r\n  search: PropTypes.bool,\r\n  onSearch: PropTypes.func,\r\n};\r\n\r\nexport default function Header({ search, onSearch }) {\r\n  return (\r\n    <Wrap search={search}>\r\n      <h1>MAYO</h1>\r\n      <SearchButton search={search} onSearch={onSearch} />\r\n    </Wrap>\r\n  );\r\n}\r\n\r\nconst Wrap = styled.div`\r\n  height: 70px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n\r\n  h1 {\r\n    margin: 0;\r\n    font-size: 2rem;\r\n    font-family: 'Jua', sans-serif;\r\n    color: ${({ search }) => (search ? '#737080' : '#42526c')};\r\n    user-select: none;\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport { IoArrowDown } from 'react-icons/io5';\r\n\r\nSearchButton.propTypes = {\r\n  search: PropTypes.bool.isRequired,\r\n  onSearch: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default function SearchButton({ onClick }) {\r\n  return (\r\n    <Button type=\"submit\" onClick={onClick}>\r\n      <IoArrowDown />\r\n    </Button>\r\n  );\r\n}\r\n\r\nconst Button = styled.button`\r\n  background: none;\r\n  outline: none;\r\n  border: none;\r\n  color: white;\r\n  padding: 0 1.6rem;\r\n  font-size: 1.5rem;\r\n  display: flex;\r\n  align-items: center;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    color: #bdc3cc;\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport { useCallback, useRef, useState } from 'react';\r\nimport InputButton from '../button/InputButton';\r\n\r\nInputBar.propTypes = {\r\n  onInsert: PropTypes.func.isRequired,\r\n  onPopup: PropTypes.func.isRequired,\r\n  onExpand: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default function InputBar({ onInsert, onPopup, onExpand }) {\r\n  const [value, setValue] = useState('');\r\n  const memoTextarea = useRef(null);\r\n\r\n  const onChange = useCallback(\r\n    (e) => {\r\n      setValue(e.target.value);\r\n\r\n      memoTextarea.current.style.height = '';\r\n      memoTextarea.current.style.height =\r\n        memoTextarea.current.scrollHeight + 'px';\r\n\r\n      if (memoTextarea.current.scrollHeight < 298)\r\n        onExpand(108 + memoTextarea.current.scrollHeight);\r\n      else onExpand(428);\r\n    },\r\n    [onExpand],\r\n  );\r\n\r\n  const onClick = useCallback(\r\n    (e) => {\r\n      const trimValue = value.trim();\r\n\r\n      if (trimValue === '') {\r\n        onPopup();\r\n      } else {\r\n        onInsert(trimValue);\r\n      }\r\n\r\n      setValue('');\r\n      memoTextarea.current.style.height = '1.6875rem';\r\n      onExpand(135);\r\n\r\n      e.preventDefault();\r\n      memoTextarea.current.focus();\r\n    },\r\n    [onInsert, value, onPopup, onExpand],\r\n  );\r\n\r\n  const onKeyDown = useCallback(\r\n    (e) => {\r\n      if (e.key === 'Enter') {\r\n        if (!e.shiftKey && !e.ctrlKey) {\r\n          onClick(e);\r\n        }\r\n      }\r\n    },\r\n    [onClick],\r\n  );\r\n\r\n  return (\r\n    <Form>\r\n      <textarea\r\n        placeholder=\"Memo about your own\"\r\n        value={value}\r\n        onChange={onChange}\r\n        onKeyDown={onKeyDown}\r\n        autoFocus\r\n        ref={memoTextarea}\r\n        spellCheck=\"false\"\r\n      />\r\n      <InputButton onClick={onClick} />\r\n    </Form>\r\n  );\r\n}\r\n\r\nconst Form = styled.form`\r\n  display: flex;\r\n  background: #42526c;\r\n  border-radius: 1.3rem;\r\n\r\n  textarea {\r\n    background: none;\r\n    outline: none;\r\n    border: none;\r\n    margin: 14px 20px;\r\n    margin-right: 0;\r\n    padding: 0;\r\n    font-size: 1.125rem;\r\n    font-family: sans-serif;\r\n    line-height: 1.5;\r\n    resize: none;\r\n    color: white;\r\n    height: 1.6875rem;\r\n    max-height: 20rem;\r\n    word-break: break-all;\r\n\r\n    &::placeholder {\r\n      color: lightslategrey;\r\n    }\r\n    flex: 1;\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport { useState, useCallback } from 'react';\r\n\r\nSearchBar.propTypes = {\r\n  onKeyword: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default function SearchBar({ onKeyword }) {\r\n  const [value, setValue] = useState('');\r\n\r\n  const onChange = useCallback(\r\n    (e) => {\r\n      setValue(e.target.value);\r\n      onKeyword(e.target.value);\r\n    },\r\n    [onKeyword],\r\n  );\r\n\r\n  return (\r\n    <Form>\r\n      <textarea\r\n        placeholder=\"Search memos =)\"\r\n        autoFocus\r\n        spellCheck=\"false\"\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n    </Form>\r\n  );\r\n}\r\n\r\nconst Form = styled.form`\r\n  display: flex;\r\n  background: #737080;\r\n  border-radius: 1.3rem;\r\n\r\n  textarea {\r\n    background: none;\r\n    outline: none;\r\n    border: none;\r\n    margin: 14px 20px;\r\n    padding: 0;\r\n    font-size: 1.125rem;\r\n    font-family: sans-serif;\r\n    line-height: 1.5;\r\n    resize: none;\r\n    color: white;\r\n    height: 1.6875rem;\r\n    max-height: 20rem;\r\n    word-break: break-all;\r\n\r\n    &::placeholder {\r\n      color: lightgrey;\r\n    }\r\n    flex: 1;\r\n  }\r\n`;\r\n","import PropTypes from 'prop-types';\r\nimport InputBar from './InputBar';\r\nimport SearchBar from './SearchBar';\r\n\r\nBar.propTypes = {\r\n  search: PropTypes.bool,\r\n  onInsert: PropTypes.func.isRequired,\r\n  onPopup: PropTypes.func,\r\n  onExpand: PropTypes.func,\r\n  onKeyword: PropTypes.func,\r\n};\r\n\r\nexport default function Bar({\r\n  search,\r\n  onInsert,\r\n  onPopup,\r\n  onExpand,\r\n  onKeyword,\r\n}) {\r\n  return (\r\n    <>\r\n      {search ? (\r\n        <SearchBar onKeyword={onKeyword} />\r\n      ) : (\r\n        <InputBar onInsert={onInsert} onPopup={onPopup} onExpand={onExpand} />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import styled, { css } from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport { MdEdit } from 'react-icons/md';\r\n\r\nEditButton.propTypes = {\r\n  checked: PropTypes.bool.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default function EditButton({ checked, onClick }) {\r\n  return (\r\n    <Wrap checked={checked} onClick={onClick}>\r\n      <MdEdit />\r\n    </Wrap>\r\n  );\r\n}\r\n\r\nconst Wrap = styled.div`\r\n  display: flex;\r\n  cursor: pointer;\r\n  font-size: 1.5rem;\r\n  max-height: 2rem;\r\n  margin-left: 5px;\r\n\r\n  ${({ checked }) => {\r\n    if (checked) {\r\n      return css`\r\n        color: #adb5bd;\r\n      `;\r\n    } else {\r\n      return css`\r\n        color: #737080;\r\n        :hover {\r\n          color: #929292;\r\n        }\r\n      `;\r\n    }\r\n  }}\r\n`;\r\n","import styled, { css } from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport { MdDelete } from 'react-icons/md';\r\n\r\nDeleteButton.propTypes = {\r\n  checked: PropTypes.bool.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default function DeleteButton({ checked, onClick }) {\r\n  return (\r\n    <Wrap checked={checked} onClick={onClick}>\r\n      <MdDelete />\r\n    </Wrap>\r\n  );\r\n}\r\n\r\nconst Wrap = styled.div`\r\n  display: flex;\r\n  cursor: pointer;\r\n  font-size: 1.5rem;\r\n  max-height: 2rem;\r\n  margin-left: 5px;\r\n\r\n  ${({ checked }) => {\r\n    if (checked) {\r\n      return css`\r\n        color: #adb5bd;\r\n      `;\r\n    } else {\r\n      return css`\r\n        color: #ff6b6b;\r\n        :hover {\r\n          color: #ff8787;\r\n        }\r\n      `;\r\n    }\r\n  }}\r\n`;\r\n","import styled, { css } from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport { MdCheckCircle } from 'react-icons/md';\r\n\r\nConfirmButton.propTypes = {\r\n  checked: PropTypes.bool.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default function ConfirmButton({ checked, onClick }) {\r\n  return (\r\n    <Wrap checked={checked} onClick={onClick}>\r\n      <MdCheckCircle />\r\n    </Wrap>\r\n  );\r\n}\r\n\r\nconst Wrap = styled.div`\r\n  display: flex;\r\n  cursor: pointer;\r\n  font-size: 1.5rem;\r\n  max-height: 2rem;\r\n  margin-left: 5px;\r\n\r\n  ${({ checked }) => {\r\n    if (checked) {\r\n      return css`\r\n        color: #adb5bd;\r\n      `;\r\n    } else {\r\n      return css`\r\n        color: #6cbd4b;\r\n        :hover {\r\n          color: #9ad483;\r\n        }\r\n      `;\r\n    }\r\n  }}\r\n`;\r\n","import styled, { css } from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport { useCallback, useState, useRef } from 'react';\r\nimport EditButton from './button/EditButton';\r\nimport DeleteButton from './button/DeleteButton';\r\nimport ConfirmButton from './button/ConfirmButton';\r\n\r\nMemo.propTypes = {\r\n  memo: PropTypes.shape({\r\n    id: PropTypes.number.isRequired,\r\n    text: PropTypes.string.isRequired,\r\n    checked: PropTypes.bool.isRequired,\r\n  }).isRequired,\r\n  onRemove: PropTypes.func.isRequired,\r\n  onToggle: PropTypes.func.isRequired,\r\n  onEdit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default function Memo({ memo, onRemove, onToggle, onEdit, onPopup }) {\r\n  const { id, text, checked } = memo;\r\n  const [value, setValue] = useState(text);\r\n  const [editFlag, setEditFlag] = useState(false);\r\n  const memoTextarea = useRef(null);\r\n\r\n  const onClick = useCallback(\r\n    (e) => {\r\n      if (editFlag) {\r\n        const trimValue = value.trim();\r\n\r\n        if (trimValue === '') {\r\n          onPopup();\r\n          setValue(text);\r\n        } else {\r\n          onEdit(id, trimValue);\r\n          setValue(trimValue);\r\n        }\r\n      }\r\n      setEditFlag(!editFlag);\r\n    },\r\n    [editFlag, id, value, onEdit, text, onPopup],\r\n  );\r\n\r\n  const onChange = useCallback((e) => {\r\n    setValue(e.target.value);\r\n  }, []);\r\n\r\n  const onKeyDown = useCallback(\r\n    (e) => {\r\n      if (e.key === 'Enter') {\r\n        if (!e.shiftKey && !e.ctrlKey) {\r\n          onClick(e);\r\n        }\r\n      }\r\n    },\r\n    [onClick],\r\n  );\r\n\r\n  if (editFlag) {\r\n    return (\r\n      <Wrap checked={checked}>\r\n        <textarea\r\n          value={value}\r\n          onChange={onChange}\r\n          onKeyDown={onKeyDown}\r\n          ref={memoTextarea}\r\n          autoFocus\r\n          spellCheck=\"false\"\r\n        />\r\n        <ConfirmButton checked={checked} onClick={onClick} />\r\n        <DeleteButton checked={checked} onClick={() => onRemove(id)} />\r\n      </Wrap>\r\n    );\r\n  } else {\r\n    return (\r\n      <Wrap checked={checked}>\r\n        <pre onClick={() => onToggle(id)} readOnly>\r\n          {text}\r\n        </pre>\r\n        <EditButton checked={checked} onClick={onClick} />\r\n        <DeleteButton checked={checked} onClick={() => onRemove(id)} />\r\n      </Wrap>\r\n    );\r\n  }\r\n}\r\n\r\nconst Wrap = styled.div`\r\n  display: flex;\r\n  background: white;\r\n  border: 2px solid lightgrey;\r\n  border-radius: 1.3rem;\r\n  padding: 14px 20px;\r\n\r\n  margin-top: 10px;\r\n  animation: down 0.7s;\r\n\r\n  @keyframes down {\r\n    0% {\r\n      opacity: 0;\r\n      margin-top: -65px;\r\n    }\r\n    50% {\r\n      opacity: 0;\r\n    }\r\n    70%,\r\n    100% {\r\n      opacity: 1;\r\n    }\r\n  }\r\n\r\n  textarea {\r\n    background: #f3f3f3;\r\n    outline: none;\r\n    border: none;\r\n    padding: 0;\r\n    margin-right: 10px;\r\n    font-size: 1.125rem;\r\n    font-family: sans-serif;\r\n    line-height: 1.5;\r\n    resize: none;\r\n    color: black;\r\n    height: 10rem;\r\n    max-height: 20rem;\r\n    flex: 1;\r\n    border-radius: 0.3rem;\r\n    word-break: break-all;\r\n  }\r\n\r\n  pre {\r\n    margin: 0;\r\n    margin-right: 10px;\r\n    padding: 0;\r\n    cursor: pointer;\r\n    flex: 1;\r\n    background: none;\r\n    outline: none;\r\n    border: none;\r\n    font-size: 1.125rem;\r\n    line-height: 1.5;\r\n    white-space: pre-wrap;\r\n    font-family: sans-serif;\r\n    user-select: none;\r\n    word-break: break-all;\r\n  }\r\n\r\n  ${({ checked }) =>\r\n    checked &&\r\n    css`\r\n      background: #e7e7e7;\r\n      pre {\r\n        color: #adb5bd;\r\n        text-decoration: line-through;\r\n      }\r\n      textarea {\r\n        color: #adb5bd;\r\n        text-decoration: line-through;\r\n      }\r\n    `};\r\n`;\r\n","import PropTypes from 'prop-types';\r\nimport Memo from '../Memo';\r\n\r\nMemoList.propTypes = {\r\n  memos: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      text: PropTypes.string.isRequired,\r\n      checked: PropTypes.bool.isRequired,\r\n    }),\r\n  ).isRequired,\r\n  onRemove: PropTypes.func.isRequired,\r\n  onToggle: PropTypes.func.isRequired,\r\n  onEdit: PropTypes.func.isRequired,\r\n  onPopup: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default function MemoList({\r\n  memos,\r\n  onRemove,\r\n  onToggle,\r\n  onEdit,\r\n  onPopup,\r\n}) {\r\n  return (\r\n    <>\r\n      {memos\r\n        .slice(0)\r\n        .reverse()\r\n        .map((memo) => (\r\n          <Memo\r\n            memo={memo}\r\n            key={memo.id}\r\n            onRemove={onRemove}\r\n            onToggle={onToggle}\r\n            onEdit={onEdit}\r\n            onPopup={onPopup}\r\n          />\r\n        ))}\r\n    </>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport Memo from '../Memo';\r\n\r\nSearchList.propTypes = {\r\n  memos: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      text: PropTypes.string.isRequired,\r\n      checked: PropTypes.bool.isRequired,\r\n    }),\r\n  ).isRequired,\r\n  keyword: PropTypes.string.isRequired,\r\n  onRemove: PropTypes.func.isRequired,\r\n  onToggle: PropTypes.func.isRequired,\r\n  onEdit: PropTypes.func.isRequired,\r\n  onPopup: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default function SearchList({\r\n  memos,\r\n  keyword,\r\n  onRemove,\r\n  onToggle,\r\n  onEdit,\r\n  onPopup,\r\n}) {\r\n  return (\r\n    <>\r\n      {memos\r\n        .slice(0)\r\n        .filter((x) => x.text.indexOf(keyword) > -1 && keyword !== '')\r\n        .reverse()\r\n        .map((memo) => (\r\n          <Memo\r\n            memo={memo}\r\n            key={memo.id}\r\n            onRemove={onRemove}\r\n            onToggle={onToggle}\r\n            onEdit={onEdit}\r\n            onPopup={onPopup}\r\n          />\r\n        ))}\r\n    </>\r\n  );\r\n}\r\n","import styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport MemoList from './MemoList';\r\nimport SearchList from './SearchList';\r\n\r\nList.propTypes = {\r\n  search: PropTypes.bool,\r\n  memos: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      text: PropTypes.string.isRequired,\r\n      checked: PropTypes.bool.isRequired,\r\n    }),\r\n  ).isRequired,\r\n  keyword: PropTypes.string,\r\n  onRemove: PropTypes.func,\r\n  onToggle: PropTypes.func,\r\n  onEdit: PropTypes.func,\r\n  onPopup: PropTypes.func,\r\n};\r\n\r\nexport default function List({\r\n  search,\r\n  memos,\r\n  keyword,\r\n  onRemove,\r\n  onToggle,\r\n  onEdit,\r\n  onPopup,\r\n}) {\r\n  return (\r\n    <Wrap>\r\n      {search ? (\r\n        <SearchList\r\n          memos={memos}\r\n          keyword={keyword}\r\n          onRemove={onRemove}\r\n          onToggle={onToggle}\r\n          onEdit={onEdit}\r\n          onPopup={onPopup}\r\n        />\r\n      ) : (\r\n        <MemoList\r\n          memos={memos}\r\n          onRemove={onRemove}\r\n          onToggle={onToggle}\r\n          onEdit={onEdit}\r\n          onPopup={onPopup}\r\n        />\r\n      )}\r\n    </Wrap>\r\n  );\r\n}\r\n\r\nconst Wrap = styled.div`\r\n  padding: 0 20px;\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport default function Footer() {\r\n  return (\r\n    <Wrap>\r\n      <p>developed by seungheon Lee .</p>\r\n    </Wrap>\r\n  );\r\n}\r\n\r\nconst Wrap = styled.footer`\r\n  height: 40px;\r\n  margin-top: auto;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n\r\n  p {\r\n    margin: 0;\r\n    max-width: 900px;\r\n    width: 100%;\r\n    text-align: center;\r\n    font-size: 0.9rem;\r\n    color: lightgray;\r\n    user-select: none;\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\nimport React, { useState, useRef, useCallback } from 'react';\r\nimport defaultMemo from './defaultMemo';\r\nimport Popup from './components/Popup';\r\nimport Header from './components/Header';\r\nimport Bar from './components/bar/Bar';\r\nimport List from './components/list/List';\r\nimport Footer from './components/Footer';\r\n\r\nexport default function App() {\r\n  const [memos, setMemos] = useState(defaultMemo);\r\n  const nextId = useRef(4);\r\n\r\n  const onInsert = useCallback(\r\n    (text) => {\r\n      const memo = {\r\n        id: nextId.current,\r\n        text,\r\n        checked: false,\r\n      };\r\n      setMemos(memos.concat(memo));\r\n      nextId.current += 1;\r\n    },\r\n    [memos],\r\n  );\r\n\r\n  const onRemove = useCallback(\r\n    (id) => {\r\n      setMemos(memos.filter((memo) => memo.id !== id));\r\n    },\r\n    [memos],\r\n  );\r\n\r\n  const onToggle = useCallback(\r\n    (id) => {\r\n      setMemos(\r\n        memos.map((memo) =>\r\n          memo.id === id ? { ...memo, checked: !memo.checked } : memo,\r\n        ),\r\n      );\r\n    },\r\n    [memos],\r\n  );\r\n\r\n  const onEdit = useCallback(\r\n    (id, text) => {\r\n      setMemos(\r\n        memos.map((memo) => (memo.id === id ? { ...memo, text: text } : memo)),\r\n      );\r\n    },\r\n    [memos],\r\n  );\r\n\r\n  const [popup, setPopup] = useState(false);\r\n  const onPopup = () => {\r\n    setPopup(true);\r\n  };\r\n\r\n  const [padding, setPadding] = useState(135);\r\n  const onExpand = (value) => {\r\n    setPadding(value);\r\n  };\r\n\r\n  // search\r\n  const [search, setSearch] = useState(false);\r\n  const onSearch = () => {\r\n    if (search) setSearch(false);\r\n    else setSearch(true);\r\n  };\r\n\r\n  const [keyword, setKeyword] = useState('');\r\n  const onKeyword = (value) => {\r\n    setKeyword(value);\r\n  };\r\n\r\n  return (\r\n    <Body search={search}>\r\n      {popup && <Popup onClose={() => setPopup(false)} />}\r\n      <Top search={search}>\r\n        <Wrap>\r\n          <Header search={search} onSearch={onSearch} />\r\n          <Bar\r\n            search={search}\r\n            onInsert={onInsert}\r\n            onPopup={onPopup}\r\n            onExpand={onExpand}\r\n            onKeyword={onKeyword}\r\n          />\r\n        </Wrap>\r\n      </Top>\r\n      <Main padding={padding}>\r\n        <List\r\n          search={search}\r\n          memos={memos}\r\n          keyword={keyword}\r\n          onRemove={onRemove}\r\n          onToggle={onToggle}\r\n          onEdit={onEdit}\r\n          onPopup={onPopup}\r\n        />\r\n      </Main>\r\n      <Footer />\r\n    </Body>\r\n  );\r\n}\r\n\r\nconst Body = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100%;\r\n  min-height: 100vh;\r\n\r\n  background-color: ${({ search }) => (search ? '#F2F2F2' : '')};\r\n  transition: all 0.2s ease-out;\r\n\r\n  textarea {\r\n    overflow-y: scroll;\r\n    &::-webkit-scrollbar {\r\n      width: 8px;\r\n    }\r\n    &::-webkit-scrollbar-track {\r\n      background-color: transparent;\r\n    }\r\n    &::-webkit-scrollbar-thumb {\r\n      border-radius: 3px;\r\n      background-color: rgba(128, 128, 128, 0.7);\r\n    }\r\n    &::-webkit-scrollbar-button {\r\n      width: 0;\r\n      height: 0;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Top = styled.header`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  z-index: 1;\r\n  background-color: ${({ search }) => (search ? '#F2F2F2' : 'white')};\r\n\r\n  width: 100%;\r\n  box-shadow: 0 0 6px lightgrey;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Wrap = styled.div`\r\n  max-width: 900px;\r\n  width: 100%;\r\n  padding: 0 20px;\r\n  padding-bottom: 10px;\r\n`;\r\n\r\nconst Main = styled.main`\r\n  padding-top: ${(props) => props.padding + 'px'};\r\n  max-width: 900px;\r\n  margin: 0 auto;\r\n  width: 100%;\r\n`;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}