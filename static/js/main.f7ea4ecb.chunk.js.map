{"version":3,"sources":["reportWebVitals.js","components/utils/Button.js","components/Header.js","components/MemoInput.js","components/Memo.js","components/MemoList.js","components/utils/Popup.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Button","icon","size","color","margin","onClick","Wrap","styled","div","props","css","Header","MemoInput","onInsert","onPopup","onExpand","useState","value","setValue","memoTextarea","useRef","onChange","useCallback","e","target","current","style","height","scrollHeight","trimValue","trim","preventDefault","focus","onKeyDown","key","shiftKey","ctrlKey","Form","placeholder","autoFocus","ref","spellCheck","type","form","button","Memo","memo","onRemove","onToggle","onEdit","id","text","checked","editFlag","setEditFlag","readOnly","MemoList","memos","slice","reverse","map","Popup","onClose","onAnimationEnd","App","setMemos","nextId","concat","filter","popup","setPopup","padding","setPadding","Body","Top","Main","Footer","header","main","footer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f7ea4ecb.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import styled, { css } from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nButton.propTypes = {\r\n  icon: PropTypes.element,\r\n  size: PropTypes.number,\r\n  color: PropTypes.string,\r\n  margin: PropTypes.number,\r\n  onClick: PropTypes.func,\r\n};\r\n\r\nexport default function Button({ icon, size, color, margin, onClick }) {\r\n  return (\r\n    <Wrap size={size} margin={margin} color={color} onClick={onClick}>\r\n      {icon}\r\n    </Wrap>\r\n  );\r\n}\r\n\r\nconst Wrap = styled.div`\r\n  display: flex;\r\n  cursor: pointer;\r\n  align-items: flex-start;\r\n\r\n  font-size: ${(props) => (props.size || 1.5) + 'rem'};\r\n  /* margin-left: ${(props) => (props.margin || 1) + 'rem'}; */\r\n\r\n  ${(props) => {\r\n    switch (props.color) {\r\n      case 'navy':\r\n        return css`\r\n          color: #42526c;\r\n          &:hover {\r\n            color: #717d91;\r\n          }\r\n        `;\r\n      case 'red':\r\n        return css`\r\n          color: #ff6b6b;\r\n          &:hover {\r\n            color: #ff8787;\r\n          }\r\n        `;\r\n      case 'green':\r\n        return css`\r\n          color: #6cbd4b;\r\n          &:hover {\r\n            color: #9ad483;\r\n          }\r\n        `;\r\n      case 'grey':\r\n        return css`\r\n          color: #737080;\r\n          &:hover {\r\n            color: #929292;\r\n          }\r\n        `;\r\n      default:\r\n        return css`\r\n          color: #adb5bd;\r\n        `;\r\n    }\r\n  }}\r\n`;\r\n","import styled from 'styled-components';\r\nimport { ImSearch } from 'react-icons/im';\r\nimport Button from './utils/Button';\r\n\r\nexport default function Header() {\r\n  return (\r\n    <Wrap>\r\n      <h1>MAYO</h1>\r\n      <Button icon={<ImSearch />} size={1.5} color=\"navy\" />\r\n    </Wrap>\r\n  );\r\n}\r\n\r\nconst Wrap = styled.div`\r\n  height: 70px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n\r\n  h1 {\r\n    margin: 0;\r\n    font-size: 2rem;\r\n    font-family: 'Jua', sans-serif;\r\n    color: #42526c;\r\n    user-select: none;\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport { IoArrowDown } from 'react-icons/io5';\r\nimport { useCallback, useRef, useState } from 'react';\r\n\r\nMemoInput.propTypes = {\r\n  onInsert: PropTypes.func.isRequired,\r\n  onPopup: PropTypes.func.isRequired,\r\n  onExpand: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default function MemoInput({ onInsert, onPopup, onExpand }) {\r\n  const [value, setValue] = useState('');\r\n  const memoTextarea = useRef(null);\r\n\r\n  const onChange = useCallback(\r\n    (e) => {\r\n      setValue(e.target.value);\r\n\r\n      memoTextarea.current.style.height = '';\r\n      memoTextarea.current.style.height =\r\n        memoTextarea.current.scrollHeight + 'px';\r\n\r\n      if (memoTextarea.current.scrollHeight < 298)\r\n        onExpand(108 + memoTextarea.current.scrollHeight);\r\n      else onExpand(428);\r\n    },\r\n    [onExpand],\r\n  );\r\n\r\n  const onClick = useCallback(\r\n    (e) => {\r\n      const trimValue = value.trim();\r\n\r\n      if (trimValue === '') {\r\n        onPopup();\r\n      } else {\r\n        onInsert(trimValue);\r\n      }\r\n\r\n      setValue('');\r\n      memoTextarea.current.style.height = '1.6875rem';\r\n      onExpand(135);\r\n\r\n      e.preventDefault();\r\n      memoTextarea.current.focus();\r\n    },\r\n    [onInsert, value, onPopup, onExpand],\r\n  );\r\n\r\n  const onKeyDown = useCallback(\r\n    (e) => {\r\n      if (e.key === 'Enter') {\r\n        if (!e.shiftKey && !e.ctrlKey) {\r\n          onClick(e);\r\n        }\r\n      }\r\n    },\r\n    [onClick],\r\n  );\r\n\r\n  return (\r\n    <Wrap>\r\n      <Form>\r\n        <textarea\r\n          placeholder=\"Memo about your own\"\r\n          value={value}\r\n          onChange={onChange}\r\n          onKeyDown={onKeyDown}\r\n          autoFocus\r\n          ref={memoTextarea}\r\n          spellCheck=\"false\"\r\n        />\r\n        <Button type=\"submit\" onClick={onClick}>\r\n          <IoArrowDown />\r\n        </Button>\r\n      </Form>\r\n    </Wrap>\r\n  );\r\n}\r\n\r\nconst Wrap = styled.div`\r\n  width: 100%;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  display: flex;\r\n  background: #42526c;\r\n  border-radius: 1.3rem;\r\n\r\n  textarea {\r\n    background: none;\r\n    outline: none;\r\n    border: none;\r\n    margin: 14px 20px;\r\n    padding: 0;\r\n    font-size: 1.125rem;\r\n    font-family: sans-serif;\r\n    line-height: 1.5;\r\n    resize: none;\r\n    color: white;\r\n    height: 1.6875rem;\r\n    max-height: 20rem;\r\n    word-break: break-all;\r\n\r\n    &::placeholder {\r\n      color: lightslategrey;\r\n    }\r\n    flex: 1;\r\n  }\r\n`;\r\n\r\nconst Button = styled.button`\r\n  background: none;\r\n  outline: none;\r\n  border: none;\r\n  color: white;\r\n  padding: 0 1.6rem 0 0;\r\n  font-size: 1.5rem;\r\n  display: flex;\r\n  align-items: center;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    color: #bdc3cc;\r\n  }\r\n`;\r\n","import styled, { css } from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport { MdDelete, MdEdit, MdCheckCircle } from 'react-icons/md';\r\nimport { useCallback, useState, useRef } from 'react';\r\nimport Button from './utils/Button';\r\n\r\nMemo.propTypes = {\r\n  memo: PropTypes.shape({\r\n    id: PropTypes.number.isRequired,\r\n    text: PropTypes.string.isRequired,\r\n    checked: PropTypes.bool.isRequired,\r\n  }).isRequired,\r\n  onRemove: PropTypes.func.isRequired,\r\n  onToggle: PropTypes.func.isRequired,\r\n  onEdit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default function Memo({ memo, onRemove, onToggle, onEdit, onPopup }) {\r\n  const { id, text, checked } = memo;\r\n  const [value, setValue] = useState(text);\r\n  const [editFlag, setEditFlag] = useState(false);\r\n  const memoTextarea = useRef(null);\r\n\r\n  const onClick = useCallback(\r\n    (e) => {\r\n      if (editFlag) {\r\n        const trimValue = value.trim();\r\n\r\n        if (trimValue === '') {\r\n          onPopup();\r\n          setValue(text);\r\n        } else {\r\n          onEdit(id, trimValue);\r\n          setValue(trimValue);\r\n        }\r\n      }\r\n      setEditFlag(!editFlag);\r\n    },\r\n    [editFlag, id, value, onEdit, text, onPopup],\r\n  );\r\n\r\n  const onChange = useCallback((e) => {\r\n    setValue(e.target.value);\r\n  }, []);\r\n\r\n  const onKeyDown = useCallback(\r\n    (e) => {\r\n      if (e.key === 'Enter') {\r\n        if (!e.shiftKey && !e.ctrlKey) {\r\n          onClick(e);\r\n        }\r\n      }\r\n    },\r\n    [onClick],\r\n  );\r\n\r\n  if (editFlag) {\r\n    return (\r\n      <Wrap checked={checked}>\r\n        <textarea\r\n          value={value}\r\n          onChange={onChange}\r\n          onKeyDown={onKeyDown}\r\n          ref={memoTextarea}\r\n          autoFocus\r\n          spellCheck=\"false\"\r\n        />\r\n        <Button\r\n          icon={<MdCheckCircle />}\r\n          color={!checked && 'green'}\r\n          onClick={onClick}\r\n        />\r\n        <Button\r\n          icon={<MdDelete />}\r\n          color={!checked && 'red'}\r\n          onClick={() => onRemove(id)}\r\n        />\r\n      </Wrap>\r\n    );\r\n  } else {\r\n    return (\r\n      <Wrap checked={checked}>\r\n        <pre onClick={() => onToggle(id)} readOnly>\r\n          {text}\r\n        </pre>\r\n        <Button\r\n          icon={<MdEdit />}\r\n          color={checked ? '' : 'grey'}\r\n          onClick={onClick}\r\n        />\r\n        <Button\r\n          icon={<MdDelete />}\r\n          color={checked ? '' : 'red'}\r\n          onClick={() => onRemove(id)}\r\n        />\r\n      </Wrap>\r\n    );\r\n  }\r\n}\r\n\r\nconst Wrap = styled.div`\r\n  display: flex;\r\n  background: white;\r\n  border: 2px solid lightgrey;\r\n  border-radius: 1.3rem;\r\n  padding: 14px 20px;\r\n\r\n  textarea {\r\n    background: #f3f3f3;\r\n    outline: none;\r\n    border: none;\r\n    padding: 0;\r\n    margin-right: 10px;\r\n    font-size: 1.125rem;\r\n    font-family: sans-serif;\r\n    line-height: 1.5;\r\n    resize: none;\r\n    color: black;\r\n    height: 10rem;\r\n    max-height: 20rem;\r\n    flex: 1;\r\n    border-radius: 0.3rem;\r\n    word-break: break-all;\r\n  }\r\n\r\n  pre {\r\n    margin: 0;\r\n    margin-right: 10px;\r\n    padding: 0;\r\n    cursor: pointer;\r\n    flex: 1;\r\n    background: none;\r\n    outline: none;\r\n    border: none;\r\n    font-size: 1.125rem;\r\n    line-height: 1.5;\r\n    white-space: pre-wrap;\r\n    font-family: sans-serif;\r\n    user-select: none;\r\n    word-break: break-all;\r\n  }\r\n\r\n  ${(props) =>\r\n    props.checked &&\r\n    css`\r\n      background: #e7e7e7;\r\n      pre {\r\n        color: #adb5bd;\r\n        text-decoration: line-through;\r\n      }\r\n      textarea {\r\n        color: #adb5bd;\r\n        text-decoration: line-through;\r\n      }\r\n    `};\r\n\r\n  div {\r\n    max-height: 2rem;\r\n  }\r\n\r\n  > div + div {\r\n    margin-left: 5px;\r\n  }\r\n`;\r\n","import PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport Memo from './Memo';\r\n\r\nMemoList.propTypes = {\r\n  memos: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      text: PropTypes.string.isRequired,\r\n      checked: PropTypes.bool.isRequired,\r\n    }),\r\n  ).isRequired,\r\n  onRemove: PropTypes.func.isRequired,\r\n  onToggle: PropTypes.func.isRequired,\r\n  onEdit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default function MemoList({\r\n  memos,\r\n  onRemove,\r\n  onToggle,\r\n  onEdit,\r\n  onPopup,\r\n}) {\r\n  return (\r\n    <Wrap>\r\n      {memos\r\n        .slice(0)\r\n        .reverse()\r\n        .map((memo) => (\r\n          <Memo\r\n            memo={memo}\r\n            key={memo.id}\r\n            onRemove={onRemove}\r\n            onToggle={onToggle}\r\n            onEdit={onEdit}\r\n            onPopup={onPopup}\r\n          />\r\n        ))}\r\n    </Wrap>\r\n  );\r\n}\r\n\r\nconst Wrap = styled.div`\r\n  padding: 10px 20px;\r\n\r\n  > div + div {\r\n    margin-top: 10px;\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport default function Popup({ onClose }) {\r\n  return (\r\n    <Wrap onAnimationEnd={onClose}>\r\n      <div>\r\n        <p>빈 내용입니다.</p>\r\n      </div>\r\n    </Wrap>\r\n  );\r\n}\r\n\r\nconst Wrap = styled.div`\r\n  background-color: rgba(0, 0, 0, 0.2);\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0;\r\n  left: 0;\r\n  bottom: 0;\r\n  z-index: 1;\r\n  user-select: none;\r\n  animation: fadein 0.7s 2 alternate;\r\n  padding-top: 5rem;\r\n\r\n  div {\r\n    border-radius: 0.5rem;\r\n    background: #fff;\r\n    width: 260px;\r\n    height: 90px;\r\n    font-size: 1.1rem;\r\n    display: flex;\r\n    align-items: center;\r\n\r\n    margin: 0 auto;\r\n  }\r\n\r\n  div > p {\r\n    flex: auto;\r\n    margin: 0;\r\n    text-align: center;\r\n  }\r\n\r\n  @keyframes fadein {\r\n    0% {\r\n      opacity: 0;\r\n      margin-top: -30px;\r\n    }\r\n    50%,\r\n    100% {\r\n      opacity: 1;\r\n      margin-top: 0;\r\n    }\r\n  }\r\n`;\r\n","import React, { useState, useRef, useCallback } from 'react';\r\nimport Header from './components/Header';\r\nimport MemoInput from './components/MemoInput';\r\nimport MemoList from './components/MemoList';\r\nimport styled from 'styled-components';\r\nimport Popup from './components/utils/Popup';\r\n\r\nexport default function App() {\r\n  const [memos, setMemos] = useState([\r\n    {\r\n      id: 1,\r\n      text: '줄바꿈을 사용하고 싶다면\\nSHIFT를 누른 상태로 ENTER를 치세요',\r\n      checked: false,\r\n    },\r\n    {\r\n      id: 2,\r\n      text: '아이디어를 해결했다면 클릭해서 줄을 그을 수 있어요',\r\n      checked: true,\r\n    },\r\n    {\r\n      id: 3,\r\n      text: '위 입력창에 당신의 아이디어나 생각을 입력하세요',\r\n      checked: false,\r\n    },\r\n  ]);\r\n\r\n  const nextId = useRef(4);\r\n\r\n  const onInsert = useCallback(\r\n    (text) => {\r\n      const memo = {\r\n        id: nextId.current,\r\n        text,\r\n        checked: false,\r\n      };\r\n      setMemos(memos.concat(memo));\r\n      nextId.current += 1;\r\n    },\r\n    [memos],\r\n  );\r\n\r\n  const onRemove = useCallback(\r\n    (id) => {\r\n      setMemos(memos.filter((memo) => memo.id !== id));\r\n    },\r\n    [memos],\r\n  );\r\n\r\n  const onToggle = useCallback(\r\n    (id) => {\r\n      setMemos(\r\n        memos.map((memo) =>\r\n          memo.id === id ? { ...memo, checked: !memo.checked } : memo,\r\n        ),\r\n      );\r\n    },\r\n    [memos],\r\n  );\r\n\r\n  const onEdit = useCallback(\r\n    (id, text) => {\r\n      setMemos(\r\n        memos.map((memo) => (memo.id === id ? { ...memo, text: text } : memo)),\r\n      );\r\n    },\r\n    [memos],\r\n  );\r\n\r\n  const [popup, setPopup] = useState(false);\r\n  const onPopup = () => {\r\n    setPopup(true);\r\n  };\r\n\r\n  const [padding, setPadding] = useState(135);\r\n  const onExpand = (value) => {\r\n    setPadding(value);\r\n  };\r\n\r\n  return (\r\n    <Body>\r\n      {popup && <Popup onClose={() => setPopup(false)} />}\r\n      <Top>\r\n        <Wrap>\r\n          <Header />\r\n          <MemoInput\r\n            onInsert={onInsert}\r\n            onPopup={onPopup}\r\n            onExpand={onExpand}\r\n          />\r\n        </Wrap>\r\n      </Top>\r\n      <Main padding={padding}>\r\n        <MemoList\r\n          memos={memos}\r\n          onRemove={onRemove}\r\n          onToggle={onToggle}\r\n          onEdit={onEdit}\r\n          onPopup={onPopup}\r\n        />\r\n      </Main>\r\n      <Footer>\r\n        <p>developed by seungheon Lee .</p>\r\n      </Footer>\r\n    </Body>\r\n  );\r\n}\r\n\r\nconst Body = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100%;\r\n  min-height: 100vh;\r\n\r\n  textarea {\r\n    overflow-y: scroll;\r\n    &::-webkit-scrollbar {\r\n      width: 8px;\r\n    }\r\n    &::-webkit-scrollbar-track {\r\n      background-color: transparent;\r\n    }\r\n    &::-webkit-scrollbar-thumb {\r\n      border-radius: 3px;\r\n      background-color: rgba(128, 128, 128, 0.7);\r\n    }\r\n    &::-webkit-scrollbar-button {\r\n      width: 0;\r\n      height: 0;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Top = styled.header`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n\r\n  width: 100%;\r\n  background-color: white;\r\n  /* box-shadow: 0 2px 2px -2px rgb(0 0 0 / 20%); */\r\n  box-shadow: 0 0 6px lightgrey;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Wrap = styled.div`\r\n  max-width: 900px;\r\n  width: 100%;\r\n  padding: 0 20px;\r\n  padding-bottom: 10px;\r\n`;\r\n\r\nconst Main = styled.main`\r\n  padding-top: ${(props) => props.padding + 'px'};\r\n  max-width: 900px;\r\n  margin: 0 auto;\r\n  width: 100%;\r\n`;\r\n\r\nconst Footer = styled.footer`\r\n  height: 40px;\r\n  margin-top: auto;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n\r\n  p {\r\n    margin: 0;\r\n    max-width: 900px;\r\n    width: 100%;\r\n    text-align: center;\r\n    font-size: 0.9rem;\r\n    color: lightgray;\r\n    user-select: none;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}